{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EApCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAUC,IACnCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,SAASjB,MAAMkB,OAClD,MAAMC,EAAOJ,OAAOH,EAAEI,cAAcC,SAASE,KAAKD,OAC5CE,EAASL,OAAOH,EAAEI,cAAcC,SAASG,OAAOF,OAEtD,GAAIC,EAAO,GAAKL,EAAQ,GAAKM,GAAU,EACrCC,EAAAzB,GAAS0B,OAAOC,QAAQ,6BAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChC1B,EAAc0B,EAAGV,GACdW,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,KACjBqB,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAsB3B,QAAeC,SAE9D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,KAClBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,oBAAoBxB,QAAeC,SAE/Dc,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = Number(e.currentTarget.elements.delay.value);\n  const step = Number(e.currentTarget.elements.step.value);\n  const amount = Number(e.currentTarget.elements.amount.value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notiflix.Notify.failure('Invalid input values');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(`Fullfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.399f62fc.js.map"}